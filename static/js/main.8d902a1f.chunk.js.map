{"version":3,"sources":["n2-features/f1-auth/a1-sign-in/bll/signInReducer.ts","n2-features/f1-auth/a2-register/bll/registerReducer.ts","n2-features/f1-auth/a3-password-recovery/bll/passwordRecoveryReducer.ts","n2-features/f1-auth/a4-new-password/bll/newPasswordReducer.ts","n2-features/f1-auth/a5-profile/bll/profileReducer.ts","n1-main/m2-bll/store.ts","n1-main/m1-ui/common/Input.tsx","n1-main/m1-ui/common/Button.tsx","n1-main/m1-ui/common/GeneralLink.tsx","n2-features/f1-auth/a1-sign-in/ui/SignIn.tsx","n2-features/f1-auth/a1-sign-in/ui/SignInContainer.tsx","n2-features/f1-auth/a1-sign-in/ui/SignInPage.tsx","n2-features/f1-auth/a2-register/ui/Register.tsx","n2-features/f1-auth/a2-register/ui/RegisterContainer.tsx","n2-features/f1-auth/a2-register/ui/RegisterPage.tsx","n2-features/f1-auth/a3-password-recovery/ui/PasswordRecovery.tsx","n2-features/f1-auth/a3-password-recovery/ui/PasswordRecoveryContainer.tsx","n2-features/f1-auth/a3-password-recovery/ui/PasswordRecoveryPage.tsx","n2-features/f1-auth/a4-new-password/ui/NewPassword.tsx","n2-features/f1-auth/a4-new-password/ui/NewPasswordContainer.tsx","n2-features/f1-auth/a4-new-password/ui/NewPasswordPage.tsx","n2-features/f1-auth/a5-profile/ui/Profile.tsx","n2-features/f1-auth/a5-profile/ui/ProfileContainer.tsx","n2-features/f1-auth/a5-profile/ui/ProfilePage.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SIGN_IN","initialState","signInReducer","state","action","type","REGISTER","registerReducer","PASSWORD_RECOVERY","passwordRecoveryReducer","NEW_PASSWORD","newPasswordReducer","PROFILE","profileReducer","reducers","combineReducers","signInPage","registerPage","passwordRecoveryPage","newPasswordPage","profilePage","store","createStore","applyMiddleware","thunkMiddleware","Input","props","placeholder","Button","buttonName","GeneralLink","to","path","title","SignIn","PASSWORD_RECOVERY_PATH","REGISTER_PATH","SignInContainer","SignInPage","Register","RegisterContainer","RegisterPage","PasswordRecovery","PasswordRecoveryContainer","PasswordRecoveryPage","NewPassword","NewPasswordContainer","NewPasswordPage","Profile","ProfileContainer","ProfilePage","Routes","render","Header","Main","App","className","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d902a1f.chunk.js","sourcesContent":["export const SIGN_IN = 'friday-project/signInReducer/SIGN_IN';\r\n\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst signInReducer = (state: InitialStateType = initialState, action: SignInActionType) => {\r\n    switch (action.type) {\r\n        case SIGN_IN: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\ntype SignInActionType = {\r\ntype: typeof SIGN_IN\r\n}\r\n\r\nconst signInAC = ():SignInActionType => {\r\n    return {\r\n        type: SIGN_IN\r\n    }\r\n}\r\n\r\nexport default signInReducer;","export const REGISTER = 'friday-project/registerReducer/REGISTER';\r\n\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst registerReducer = (state: InitialStateType = initialState, action: RegisterActionType) => {\r\n    switch (action.type) {\r\n        case REGISTER: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\ntype RegisterActionType = {\r\ntype: typeof REGISTER\r\n}\r\n\r\nconst registerAC = ():RegisterActionType => {\r\n    return {\r\n        type: REGISTER\r\n    }\r\n}\r\n\r\nexport default registerReducer;","export const PASSWORD_RECOVERY = 'friday-project/passwordRecoveryReducer/PASSWORD_RECOVERY';\r\n\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst passwordRecoveryReducer = (state: InitialStateType = initialState, action: PasswordRecoveryActionType) => {\r\n    switch (action.type) {\r\n        case PASSWORD_RECOVERY: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\ntype PasswordRecoveryActionType = {\r\ntype: typeof PASSWORD_RECOVERY\r\n}\r\n\r\nconst passwordRecoveryAC = ():PasswordRecoveryActionType => {\r\n    return {\r\n        type: PASSWORD_RECOVERY\r\n    }\r\n}\r\n\r\nexport default passwordRecoveryReducer;","export const NEW_PASSWORD = 'friday-project/newPasswordReducer/NEW_PASSWORD';\r\n\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst newPasswordReducer = (state: InitialStateType = initialState, action: NewPasswordActionType) => {\r\n    switch (action.type) {\r\n        case NEW_PASSWORD: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\ntype  NewPasswordActionType = {\r\ntype: typeof NEW_PASSWORD\r\n}\r\n\r\nconst newPasswordAC = ():NewPasswordActionType => {\r\n    return {\r\n        type: NEW_PASSWORD\r\n    }\r\n}\r\n\r\nexport default newPasswordReducer;","export const PROFILE = 'friday-project/profileReducer/PROFILE';\r\n\r\n\r\nconst initialState = {\r\n\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action:  ProfileActionType) => {\r\n    switch (action.type) {\r\n        case PROFILE: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\ntype  ProfileActionType = {\r\ntype: typeof PROFILE\r\n}\r\n\r\nconst profiledAC = ():ProfileActionType => {\r\n    return {\r\n        type: PROFILE\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import {applyMiddleware, createStore, combineReducers} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport signInReducer from \"../../n2-features/f1-auth/a1-sign-in/bll/signInReducer\";\r\nimport registerReducer from \"../../n2-features/f1-auth/a2-register/bll/registerReducer\";\r\nimport passwordRecoveryReducer from \"../../n2-features/f1-auth/a3-password-recovery/bll/passwordRecoveryReducer\";\r\nimport newPasswordReducer from \"../../n2-features/f1-auth/a4-new-password/bll/newPasswordReducer\";\r\nimport profileReducer from \"../../n2-features/f1-auth/a5-profile/bll/profileReducer\";\r\n\r\n\r\n\r\nconst reducers =  combineReducers({\r\n    signInPage: signInReducer,\r\n    registerPage: registerReducer,\r\n    passwordRecoveryPage: passwordRecoveryReducer,\r\n    newPasswordPage: newPasswordReducer,\r\n    profilePage: profileReducer\r\n});\r\n\r\ntype ReducersType = typeof reducers\r\nexport type AppStateType = ReturnType<ReducersType>\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\r\n\r\n\r\ntype OwnPropsType = {\r\n    type: string,\r\n    placeholder?: string\r\n}\r\ntype PropsType = OwnPropsType\r\n\r\n\r\nconst Input: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <form >\r\n                {props.type === \"text\" || \"password\" ?\r\n                <input type={props.type} placeholder={props.placeholder}/>\r\n                : <input type=\"checkbox\"/>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\n\r\n\r\ntype OwnPropsType = {\r\n    buttonName: string\r\n}\r\ntype PropsType = OwnPropsType\r\n\r\n\r\nconst Button: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <button>{props.buttonName}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype OwnPropsType = {\r\n    path: string\r\n    title: string\r\n}\r\ntype PropsType = OwnPropsType\r\n\r\n\r\nconst GeneralLink: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={props.path}>{props.title} </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GeneralLink;","import React from 'react';\r\nimport Input from \"../../../../n1-main/m1-ui/common/Input\";\r\nimport Button from \"../../../../n1-main/m1-ui/common/Button\";\r\nimport GeneralLink from \"../../../../n1-main/m1-ui/common/GeneralLink\";\r\nimport {PASSWORD_RECOVERY_PATH, REGISTER_PATH} from \"../../../../n1-main/m1-ui/routes/Routes\";\r\n\r\n\r\nconst SignIn = () => {\r\n    return (\r\n        <div>\r\n        <div>\r\n            Sign in\r\n        </div>\r\n\r\n            <div>\r\n            <Input type={\"text\"} placeholder={\"Enter your name\"}/>\r\n            <Input type={\"password\"} placeholder={\"Enter your password\"} />\r\n            <GeneralLink path={PASSWORD_RECOVERY_PATH} title={\"Password recovery?\"}/>\r\n                <div>\r\n                    Remember me\r\n                </div>\r\n                <Input type={\"checkbox\"}/>\r\n            <Button buttonName={\"Enter\"}/>\r\n            <GeneralLink path={REGISTER_PATH} title={\"Register\"}/>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport SignIn from \"./SignIn\";\r\n\r\n\r\nconst SignInContainer = () => {\r\n    return (\r\n        <SignIn/>\r\n    );\r\n};\r\n\r\nexport default SignInContainer;","import React from 'react';\r\nimport SignInContainer from \"./SignInContainer\";\r\n\r\nconst SignInPage = () => {\r\n    return (\r\n        <SignInContainer/>\r\n    );\r\n};\r\n\r\nexport default SignInPage;","import React from 'react';\r\n\r\n\r\nconst Register = () => {\r\n    return (\r\n        <div>\r\n            Register\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","import React from 'react';\r\nimport Register from \"./Register\";\r\n\r\n\r\nconst RegisterContainer = () => {\r\n    return (\r\n        <Register/>\r\n    );\r\n};\r\n\r\nexport default RegisterContainer;","import React from 'react';\r\nimport RegisterContainer from \"./RegisterContainer\";\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <RegisterContainer/>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;","import React from 'react';\r\n\r\n\r\nconst PasswordRecovery = () => {\r\n    return (\r\n        <div>\r\n            Password Recovery\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordRecovery;","import React from 'react';\r\nimport PasswordRecovery from \"./PasswordRecovery\";\r\n\r\n\r\nconst PasswordRecoveryContainer = () => {\r\n    return (\r\n        <PasswordRecovery/>\r\n    );\r\n};\r\n\r\nexport default PasswordRecoveryContainer;","import React from 'react';\r\nimport PasswordRecoveryContainer from \"./PasswordRecoveryContainer\";\r\n\r\nconst PasswordRecoveryPage = () => {\r\n    return (\r\n        <PasswordRecoveryContainer/>\r\n    );\r\n};\r\n\r\nexport default PasswordRecoveryPage;","import React from 'react';\r\n\r\n\r\nconst NewPassword = () => {\r\n    return (\r\n        <div>\r\n            New Password\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewPassword;","import React from 'react';\r\nimport NewPassword from \"./NewPassword\";\r\n\r\n\r\nconst NewPasswordContainer = () => {\r\n    return (\r\n        <NewPassword/>\r\n    );\r\n};\r\n\r\nexport default NewPasswordContainer;","import React from 'react';\r\nimport NewPasswordContainer from \"./NewPasswordContainer\";\r\n\r\nconst NewPasswordPage = () => {\r\n    return (\r\n        <NewPasswordContainer/>\r\n    );\r\n};\r\n\r\nexport default NewPasswordPage;","import React from 'react';\r\n\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\n\r\n\r\nconst ProfileContainer = () => {\r\n    return (\r\n        <Profile/>\r\n    );\r\n};\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\nimport ProfileContainer from \"./ProfileContainer\";\r\n\r\nconst ProfilePage = () => {\r\n    return (\r\n        <ProfileContainer/>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport SignInPage from \"../../../n2-features/f1-auth/a1-sign-in/ui/SignInPage\";\r\nimport RegisterPage from \"../../../n2-features/f1-auth/a2-register/ui/RegisterPage\";\r\nimport PasswordRecoveryPage from \"../../../n2-features/f1-auth/a3-password-recovery/ui/PasswordRecoveryPage\";\r\nimport NewPasswordPage from \"../../../n2-features/f1-auth/a4-new-password/ui/NewPasswordPage\";\r\nimport ProfilePage from '../../../n2-features/f1-auth/a5-profile/ui/ProfilePage';\r\n\r\n\r\nexport const SIGN_IN_PATH = '/sign_in';\r\nexport const REGISTER_PATH = '/register';\r\nexport const PASSWORD_RECOVERY_PATH = '/password_recovery';\r\nexport const NEW_PASSWORD_PATH = '/new_password';\r\nexport const PROFILE_PATH = '/profile';\r\n\r\n\r\nconst Routes: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Route path={SIGN_IN_PATH} render={() => <SignInPage/>}/>\r\n            <Route path={REGISTER_PATH} render={() => <RegisterPage/>}/>\r\n            <Route path={PASSWORD_RECOVERY_PATH} render={() => <PasswordRecoveryPage/>}/>\r\n            <Route path={NEW_PASSWORD_PATH} render={() => <NewPasswordPage/>}/>\r\n            <Route path={PROFILE_PATH} render={() => <ProfilePage/>}/>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\r\nimport {NEW_PASSWORD_PATH, PASSWORD_RECOVERY_PATH, PROFILE_PATH, REGISTER_PATH, SIGN_IN_PATH} from \"../routes/Routes\";\r\nimport GeneralLink from \"../common/GeneralLink\";\r\n\r\n\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <>\r\n            <GeneralLink path={SIGN_IN_PATH} title={'Sign-in'}/>\r\n            <GeneralLink path={REGISTER_PATH} title={'Register'}/>\r\n            <GeneralLink path={PASSWORD_RECOVERY_PATH} title={'Password recovery'}/>\r\n            <GeneralLink path={NEW_PASSWORD_PATH} title={'New password'}/>\r\n            <GeneralLink path={PROFILE_PATH} title={'Profile'}/>\r\n            </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Routes from './routes/Routes';\r\nimport Header from './header/Header';\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from \"./n1-main/m2-bll/store\";\nimport Main from \"./n1-main/m1-ui/Main\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Provider store={store}>\n          <Main/>\n        </Provider>\n      </HashRouter>\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}